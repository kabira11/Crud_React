{"version":3,"sources":["api/api.js","components/alertMessage.js","store/reducers/reducer.js","store/reducers/index.js","store/index.js","components/employeeList.js","components/AddEmployee.js","api/userapi.js","components/Signup.js","api/loginapi.js","components/Login.js","components/logout.js","App.js","serviceWorker.js","index.js"],"names":["axios","require","polyfill","ApiService","get","apiurl","then","response","data","catch","post","bodyFormData","err","put","console","log","delete","userModule","user","alertmesage","status","message","NotificationManager","info","success","warning","error","initialState","users","allReducers","combineReducers","rootReducer","state","arguments","length","undefined","action","type","Object","objectSpread","payload","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","EmployeeList","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleDeleteUser","bind","assertThisInitialized","sessionStorage","getItem","allUser","userid","res","fullName","_this2","employe","getState","logout","react_default","a","createElement","className","react_router_dom","to","pathname","signin","signup","keys","employeeId","Fragment","map","emp","index","key","_id","scope","email","mobile","city","onClick","Component","connect","dispatch","_allUser","asyncToGenerator","regenerator_default","mark","_callee3","wrap","_context3","prev","next","t0","t1","sent","t2","abrupt","stop","apply","AddEmployee","handleChange","handleSubmitForm","handleUpdateUser","location","selectedEmployee","setState","event","preventDefault","history","push","target","value","defineProperty","name","onSubmit","id","placeholder","onChange","userApi","Signup","firstName","lastName","password","confirmPassword","refs","ref","aria-describedby","loginApi","Login","setItem","_Component","inherits","createClass","clear","App","react_router","exact","path","component","lib","Boolean","hostname","match","ReactDOM","render","es","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.2db4c9cb.chunk.js","sourcesContent":["var axios = require('axios')\r\nvar ES6Promise = require('es6-promise')\r\nES6Promise.polyfill()\r\nconst ApiService = {\r\n    get( apiurl) {\r\n      return axios.get(apiurl)\r\n      .then(response => {\r\n          return response.data\r\n        })\r\n        .catch(response => {\r\n            return response.data\r\n        })\r\n    },\r\n\r\n    post( apiurl,bodyFormData) {\r\n        return axios.post(apiurl,bodyFormData)\r\n        .then(response => {\r\n            return response\r\n          })\r\n        .catch(err => {\r\n          return err\r\n        })\r\n    },\r\n\r\n\r\n    put( apiurl,bodyFormData) {\r\n        return axios.put(apiurl,bodyFormData)\r\n        .then(response => {\r\n            return response\r\n          })\r\n        .catch(err => console.log(err))\r\n    },\r\n    delete( apiurl,bodyFormData) {\r\n        return axios.delete(apiurl)\r\n        .then(response => {\r\n            return response\r\n          })\r\n        .catch(err => console.log(err))\r\n    }\r\n}\r\n  export default ApiService\r\n\r\n\r\n\r\nexport const userModule = {\r\n  getUser() {\r\n    return ApiService.get( 'http://localhost:5004/employee/' )\r\n  },\r\n  selectedUser(user) {\r\n    return ApiService.get( 'http://localhost:5004/employee/'+user)\r\n  },\r\n\r\n  addUser(user) {\r\n    return ApiService.post( 'http://localhost:5004/employee/',user)\r\n  },\r\n\r\n  updateUser(user) {\r\n    return ApiService.put( 'http://localhost:5004/employee/'+user['_id'],user)\r\n  },\r\n\r\n  deleteUser(user) {\r\n    return ApiService.delete( 'http://localhost:5004/employee/'+user)\r\n  }\r\n}\r\n","import {NotificationManager} from 'react-notifications';\r\nimport 'react-notifications/lib/notifications.css';\r\n/*alertmesage.createNotification(status,\"Message\")----->Call this function in your message*/\r\nexport const alertmesage = {\r\n    createNotification (status,message){\r\n        switch (status) {\r\n          case 200:\r\n             return NotificationManager.info(message);\r\n          case 201:\r\n            return NotificationManager.success(message);\r\n         \r\n          case 400:\r\n             return NotificationManager.warning(message);\r\n           \r\n          case 500:\r\n            return NotificationManager.error(message\r\n            );\r\n           default: \r\n            return NotificationManager.error(message);\r\n      }\r\n    }\r\n}\r\n","// import {\r\n//     USER_SELECTED,\r\n//     USER_LIST,\r\n//     ADD_USER,\r\n//     UPDATE_USER\r\n//   } from '../actionTypes';\r\n  \r\n  const initialState = {\r\n    users: {}\r\n    // selectedUsers: [{\r\n    //     _id : '',\r\n    //     title:'',\r\n    //     content:''\r\n    // }],\r\n    // addedUsers: {},\r\n    // username : 'pankaj bhardwaj'\r\n  }\r\n  export default function(state = initialState, action){\r\n      console.log(\"in reducer -\")\r\n    //   console.log(state)\r\n    //   console.log(action.payload)\r\n    //   console.log(\"-----------------------------------\")\r\n\r\n    switch(action.type){\r\n        // case USER_SELECTED:\r\n        // return {\r\n        //     ...state,\r\n        //     selectedUsers: action.payload\r\n        //   };\r\n\r\n        case 'USER_LIST' :\r\n        return {\r\n            ...state,\r\n            users: action.payload\r\n          };\r\n        // case ADD_USER :\r\n        // return {\r\n        //     ...state,\r\n        //     addedUsers: action.payload\r\n        //   };\r\n        // case UPDATE_USER : \r\n        // return{\r\n        //     ...state,\r\n        //     addedUsers: action.payload\r\n        // };\r\n\r\n        default:\r\n            return state; \r\n    }\r\n}\r\n\r\n\r\n\r\n","import reducer from './reducer'\r\nimport { combineReducers } from 'redux'\r\n\r\n\r\nconst allReducers = combineReducers({\r\n    rootReducer : reducer\r\n   });\r\n   \r\n   \r\n   export default allReducers;","import {createStore} from 'redux';\r\nimport  allReducers  from \"./reducers\";\r\nconst store = createStore(\r\n    allReducers,\r\n{},\r\nwindow.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n    \r\n)\r\n\r\nexport default store;","import React, { Component } from 'react';\r\nimport axios from 'axios'\r\nimport { userModule } from '../api/api';\r\nimport { Link } from 'react-router-dom'\r\nimport '../App.css'\r\nimport  { alertmesage }  from './alertMessage'; \r\nimport {connect} from 'react-redux'\r\nimport store from '../store';\r\n \r\n\r\n\r\nclass EmployeeList extends Component {\r\n\r\n    constructor(props) {\r\n      console.log(\"object\")\r\n      super(props)\r\n      // this.state = {\r\n      //     employee  : \"\"\r\n      // }\r\n\r\n      this.handleDeleteUser =  this.handleDeleteUser.bind(this);\r\n    }\r\n      \r\n    async componentDidMount(){\r\n      console.log(\"componentDIDsMount\")\r\n      console.log(sessionStorage.getItem(\"email\"))\r\n\r\n      const emp = await this.props.allUser()\r\n      // console.log(this.props.users);\r\n      // console.log(emp.payload);\r\n      // console.log(await userModule.getUser())\r\n      // console.log(\"-----------------------------------\")\r\n      // await userModule.getUser()\r\n      // this.setState({\r\n      //   employee : emp.payload\r\n      // })\r\n\r\n    }\r\n\r\n  \r\n    async handleDeleteUser(userid){ \r\n      const res = await userModule.deleteUser(userid)\r\n      //after deleting data call getalluser for showing updated records\r\n      // await userModule.getUser()\r\n      const emp = await this.props.allUser()\r\n      // console.log(\"in delete\");\r\n      // console.log(emp.payload);\r\n      // console.log(\"--------------------------\");\r\n      // this.setState({\r\n      //   employee : emp.payload\r\n      // })\r\n      alertmesage.createNotification(res.status,\"Employee \"+res.data.fullName+\" Deleted \")\r\n    }\r\n    \r\n    render() {\r\n      console.log(\"reneder\")\r\n      const employe = this.props.users;\r\n      console.log(\"reneder1\")\r\n      console.log(store.getState());\r\n      // console.log(\"-----------------------------------\")\r\n\r\n      \r\n      const logout = sessionStorage.getItem(\"email\") &&\r\n      (\r\n          <button className=\"btn  btn-light btn-sm my-0\">\r\n            <Link \r\n                  to={{pathname :`/logout` \r\n                      }}> Logout\r\n            </Link>\r\n          </button>\r\n      )\r\n\r\n      const signin = !sessionStorage.getItem(\"email\") &&\r\n      (\r\n               <button className=\"btn  btn-light btn-sm my-0\">\r\n            <Link \r\n                  to={{pathname :`/signin` \r\n                      }}> Sign In\r\n            </Link>\r\n          </button>\r\n      )\r\n\r\n      const signup = !sessionStorage.getItem(\"email\") &&\r\n      (\r\n          <button className=\"btn  btn-light btn-sm my-0\">\r\n            <Link \r\n                  to={{pathname :`/signup` \r\n                      }}> Sign UP\r\n            </Link>\r\n          </button>\r\n      )\r\n\r\n      if(!Object.keys(employe).length){\r\n        return (<div></div>);\r\n      }\r\n\r\n\r\n      return(\r\n        <div>\r\n          <h1 className= \"App\">Employee Lists</h1>\r\n          <button className=\"btn  btn-light btn-sm my-0\">\r\n            <Link \r\n                  to={{pathname :`/addemployee` ,\r\n                  state: {employeeId:\"\"}\r\n                      }}> ADD Employee\r\n            </Link>\r\n          </button>\r\n          {signup}\r\n          {signin}\r\n          {logout}\r\n          <table className =\"table table-bordered table-hover\">\r\n          <thead className =\"black white-text\">\r\n            <tr>\r\n              <th>Serial NO.</th>\r\n              <th>Employee Name</th>\r\n              <th>Email</th>\r\n              <th>Mobile Number</th>\r\n              <th>City</th>\r\n\r\n              {\r\n                  sessionStorage.getItem(\"email\") && \r\n                (\r\n                  <>\r\n                    <th>Edit</th>\r\n                    <th>Delete</th>\r\n                  </>\r\n                )\r\n                }\r\n\r\n\r\n\r\n\r\n            </tr>\r\n          </thead>\r\n        {\r\n    employe.map((emp , index) => {\r\n\r\n          return (\r\n            <tbody key = {emp._id} className = {emp._id}>\r\n              <tr >\r\n                <th scope=\"row\">{index + 1}</th>\r\n                <td>{emp.fullName}</td>\r\n                <td>{emp.email}</td>\r\n                <td>{emp.mobile}</td>\r\n                <td>{emp.city}</td>\r\n                {\r\n                  sessionStorage.getItem(\"email\") && \r\n                (\r\n                  <>\r\n                  <td>\r\n                    <button type=\"button\"\r\n                          className=\"btn btn-danger btn-rounded btn-sm my-0\">\r\n                                <Link \r\n                                      to={{pathname :`/addemployee`,\r\n                                      state: {employeeId:emp._id}\r\n                                          }}>Edit\r\n                                </Link>\r\n                    </button>\r\n                </td>\r\n\r\n                \r\n                <td>\r\n                  <span className=\"table-remove\"><button type=\"button\"\r\n                      className=\"btn btn-danger btn-rounded btn-sm my-0\" \r\n                      onClick={()=>this.handleDeleteUser(emp._id)}>Delete</button></span>\r\n                </td>\r\n                </>\r\n                )\r\n                }\r\n\r\n              </tr>\r\n            </tbody>\r\n            );\r\n\r\n        })\r\n      }\r\n          </table>\r\n        </div>\r\n      )\r\n    }\r\n  }\r\n\r\n//calling this method very first internally with the help of connect()\r\n  function mapStateToProps(state){\r\n    console.log(\"in mapStateToProps\")\r\n    console.log(state.rootReducer.users);\r\n    // console.log(\"-----------------------------------\")\r\n    //with below name \"users\" we can access users data like this ---> this.props.users\r\n    return {\r\n      users : state.rootReducer.users\r\n    }\r\n}\r\n\r\n//this method is calling dispatch method as argument dispatch method behind the scene\r\n//calling this method when any changes happen with the help of allUser property like this ------> this.props.allUser()\r\nconst  mapDispatchToProps = dispatch => {\r\n      console.log(\"in mapDispatchToProps\")\r\n    // console.log(\"-----------------------------------\")\r\n  return {\r\n    allUser: async () =>  dispatch({\r\n        type: \"USER_LIST\", \r\n        payload: await userModule.getUser()\r\n    })\r\n  }\r\n};\r\n\r\n\r\nexport default connect(mapStateToProps , mapDispatchToProps)(EmployeeList);\r\n","import React, { Component } from 'react';\r\nimport axios from 'axios'\r\nimport { userModule } from '../api/api';\r\nimport { Link } from 'react-router-dom'\r\nimport '../App.css'\r\nimport  { alertmesage }  from './alertMessage'; \r\nimport store from '../store';\r\n\r\nclass AddEmployee extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            _id: \"\" ,\r\n            fullName: \"\" ,\r\n            email: \"\" ,\r\n            mobile: \"\",\r\n            city: \"\"\r\n        }\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmitForm =  this.handleSubmitForm.bind(this);\r\n        this.handleUpdateUser =  this.handleUpdateUser.bind(this);\r\n    }\r\n\r\n    async componentDidMount(){\r\n        //this data will come from employeelist.js from state property in Link\r\n        //this.props.location.state.employeeId\r\n        console.log(\"object\")\r\n        // console.log(this.props.location.state.employeeId)\r\n        //this will run when we are updating employee\r\n        if(this.props.location.state.employeeId){\r\n            const selectedEmployee = await userModule.selectedUser(this.props.location.state.employeeId)\r\n            console.log(selectedEmployee)\r\n            this.setState({\r\n                _id: selectedEmployee._id ,\r\n                fullName: selectedEmployee.fullName ,\r\n                email: selectedEmployee.email ,\r\n                mobile: selectedEmployee.mobile,\r\n                city: selectedEmployee.city\r\n            })\r\n        }\r\n\r\n      }\r\n\r\n    //Udate User\r\n    async handleUpdateUser(event){\r\n        event.preventDefault();\r\n        if(this.state.fullName && this.state.email && this.state.mobile && this.state.city){\r\n        const res = await userModule.updateUser(this.state)\r\n         this.setState({\r\n            _id: \"\" ,\r\n            fullName: \"\" ,\r\n            email: \"\" ,\r\n            mobile: \"\",\r\n            city: \"\"\r\n           });\r\n         this.props.history.push(\"/\");\r\n         alertmesage.createNotification(res.status,\"Employee \"+res.data.fullName+\" Updated\")\r\n       }else{\r\n           alertmesage.createNotification(400,\"Did you miss filling some field.\")\r\n       }\r\n    }\r\n\r\n    //Update value in state on type something in Input Fields.\r\n    handleChange(event){\r\n        console.log(event.target.value);\r\n        //[event.target.name] for getting value from form with refernece of name properties\r\n        this.setState({\r\n            [event.target.name]: event.target.value\r\n            // [event.target.value.fullName]: event.target.value ,\r\n            // [event.target.value.email]: event.target.value ,\r\n            // [event.target.value.mobile]: event.target.value,\r\n            // [event.target.value.city]: event.target.value\r\n        })\r\n        event.preventDefault();\r\n    }\r\n\r\n    //Method for Submit Form.\r\n    async handleSubmitForm(event){\r\n        console.log(\"jkjkj\")\r\n        event.preventDefault();\r\n        if(this.state.fullName && this.state.email && this.state.mobile && this.state.city){\r\n            const res = await userModule.addUser(this.state)\r\n             this.setState({\r\n                fullName: \"\" ,\r\n                email: \"\" ,\r\n                mobile: \"\",\r\n                city: \"\"\r\n               });\r\n            //for redirecting home page\r\n             this.props.history.push(\"/\");\r\n             alertmesage.createNotification(res.status,\"Employee \"+res.data.fullName+\" created \")\r\n        }else{\r\n            //Alert message\r\n            alertmesage.createNotification(400,\"Did you miss filling some field.\")\r\n        }\r\n\r\n     }\r\n\r\n\r\n    render(){\r\n        console.log(\"render\")\r\n        console.log(!this.props.location.state.employeeId)\r\n        return(\r\n            <form className=\"text-center border border-light p-5\" onSubmit={this.handleSubmitForm}>\r\n                <div className = \"col-md-4 offset-md-4\">\r\n                    {\r\n                        !this.props.location.state.employeeId ?\r\n                            <p className=\"h4 mb-4\">ADD EMPLOYEE</p> :\r\n                            <p className=\"h4 mb-4\">UPDATE EMPLOYEE</p>\r\n                    }\r\n                    \r\n\r\n                    <input type=\"text\" id=\"name\" className=\"form-control mb-4\" placeholder=\"Name\" value={this.state.fullName} onChange={this.handleChange} name=\"fullName\"/>\r\n\r\n                    <input type=\"email\" id=\"email\" className=\"form-control mb-4\" placeholder=\"E-mail\" value={this.state.email} onChange={this.handleChange} name=\"email\"/>\r\n\r\n                    <input type=\"text\" id=\"mobile\" className=\"form-control mb-4\" placeholder=\"Mobile Number\" value={this.state.mobile} onChange={this.handleChange} name=\"mobile\"/>\r\n\r\n                    <input type=\"text\" id=\"city\" className=\"form-control mb-4\" placeholder=\"City\" value={this.state.city} onChange={this.handleChange} name=\"city\"/>\r\n                    \r\n                    {\r\n                            !this.props.location.state.employeeId ?\r\n                            <button className=\"btn btn-info btn-block btn-sm\" type=\"submit\" onClick={this.handleSubmitForm}>Submit</button> :\r\n                            <button className=\"btn btn-info btn-block btn-sm\" type=\"submit\" onClick={this.handleUpdateUser}>Update</button>\r\n                    }\r\n                    \r\n                </div>\r\n            </form>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default AddEmployee;\r\n","var axios = require('axios')\r\nvar ES6Promise = require('es6-promise')\r\nES6Promise.polyfill()\r\nconst ApiService = {\r\n    get( apiurl) {\r\n      return axios.get(apiurl)\r\n      .then(response => {\r\n          return response.data\r\n        })\r\n        .catch(response => {\r\n            return response.data\r\n        })\r\n    },\r\n\r\n    post( apiurl,bodyFormData) {\r\n        console.log(\":in API\")\r\n        return axios.post(apiurl,bodyFormData)\r\n        .then(response => {\r\n          console.log(\"pankaj\")\r\n            return response\r\n          })\r\n        .catch(err => {\r\n          console.log(\"pankaj114554\")\r\n          console.log(err.response)\r\n          const res = {\r\n              message : err.response.data.message,\r\n              status : err.response.status\r\n          }\r\n          return res;\r\n        \r\n        })\r\n    },\r\n\r\n\r\n    put( apiurl,bodyFormData) {\r\n        return axios.put(apiurl,bodyFormData)\r\n        .then(response => {\r\n            return response\r\n          })\r\n        .catch(err => console.log(err))\r\n    },\r\n    delete( apiurl,bodyFormData) {\r\n        return axios.delete(apiurl)\r\n        .then(response => {\r\n            return response\r\n          })\r\n        .catch(err => console.log(err))\r\n    }\r\n}\r\n  export default ApiService\r\n\r\n\r\n\r\nexport const userApi = {\r\n  getUser() {\r\n    return ApiService.get( 'http://localhost:5004/employee/' )\r\n  },\r\n  selectedUser(user) {\r\n    return ApiService.get( 'http://localhost:5004/employee/'+user)\r\n  },\r\n\r\n  addUser(user) {\r\n      console.log(user)\r\n    return ApiService.post( 'http://localhost:5004/user/',user)\r\n  },\r\n\r\n//   loginCheck(user) {\r\n//     console.log(user)\r\n//   return ApiService.post( 'http://localhost:5004/user/checklogin',user)\r\n//   },\r\n\r\n  updateUser(user) {\r\n    return ApiService.put( 'http://localhost:5004/employee/'+user['_id'],user)\r\n  },\r\n\r\n  deleteUser(user) {\r\n    return ApiService.delete( 'http://localhost:5004/employee/'+user)\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport  { alertmesage }  from './alertMessage'; \r\nimport {userApi} from '../api/userapi';\r\n\r\nclass Signup extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            _id: \"\" ,\r\n            firstName: \"\" ,\r\n            lastName: \"\" ,\r\n            email: \"\",\r\n            password: \"\",\r\n            confirmPassword : \"\"\r\n        }\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmitForm =  this.handleSubmitForm.bind(this);\r\n        // this.handleUpdateUser =  this.handleUpdateUser.bind(this);\r\n    }\r\n\r\n    //Update value in state on type something in Input Fields.\r\n    handleChange(event){\r\n        console.log(this.refs.firstName.value)\r\n        console.log(this.refs.lastName.value)\r\n        console.log(this.refs.email.value)\r\n        console.log(this.refs.confirmPassword.value)\r\n        console.log(this.refs.password.value)\r\n        this.setState({\r\n            firstName: this.refs.firstName.value ,\r\n            lastName: this.refs.lastName.value ,\r\n            email: this.refs.email.value,\r\n            password: this.refs.password.value,\r\n            confirmPassword: this.refs.confirmPassword.value\r\n        })\r\n    }\r\n\r\n    //Method for Submit Form.\r\n    async handleSubmitForm(event){\r\n        event.preventDefault();\r\n        if(this.state.password != this.state.confirmPassword){\r\n            alertmesage.createNotification(400,\"Password and Confirm Password Should be the same.\")\r\n            return \"\";\r\n        }\r\n        if(this.state.firstName && this.state.email && this.state.password && this.state.confirmPassword){\r\n            const res = await userApi.addUser(this.state)\r\n \r\n            // //for redirecting home page\r\n            console.log(res);\r\n            if(res.status == 201){\r\n                this.setState({\r\n                    firstName: \"\" ,\r\n                    lastName: \"\" ,\r\n                    email: \"\",\r\n                    password: \"\",\r\n                    confirmPassword : \"\"\r\n                   });\r\n                this.props.history.push(\"/\");\r\n                alertmesage.createNotification(res.status,\"Signed Up Successfully\")\r\n                \r\n            }else{\r\n                alertmesage.createNotification(res.status,res.message)\r\n            }\r\n\r\n        }else{\r\n            //Alert message\r\n            alertmesage.createNotification(400,\"Did you miss filling some field.\")\r\n        }\r\n\r\n     }\r\n\r\n    render() {\r\n        return (\r\n            \r\n        <form className=\"text-center border border-light p-5\" onSubmit={this.handleSubmitForm}>\r\n            <div className = \"col-md-4 offset-md-4\">\r\n                <p className=\"h4 mb-4\">Sign up</p>\r\n                <div className=\"form-row mb-4\">\r\n                    <div className=\"col\">\r\n                        <input type=\"text\" id=\"firstName\" className=\"form-control\" placeholder=\"First name\" value={this.state.firstName} onChange={this.handleChange} ref=\"firstName\"/>\r\n                    </div>\r\n                    <div className=\"col\">\r\n                        <input type=\"text\" id=\"lastName\" className=\"form-control\" placeholder=\"Last name\" value={this.state.lastName} onChange={this.handleChange} ref=\"lastName\"/>\r\n                    </div>\r\n                </div>\r\n                <input type=\"email\" id=\"email\" className=\"form-control mb-4\" placeholder=\"E-mail\" value={this.state.email} onChange={this.handleChange} ref=\"email\"/>\r\n                <input type=\"password\" id=\"password\" className=\"form-control\" placeholder=\"Password\" aria-describedby=\"defaultRegisterFormPasswordHelpBlock\" value={this.state.password} onChange={this.handleChange} ref=\"password\"/>\r\n\r\n                <small id=\"defaultRegisterFormPasswordHelpBlock\" className=\"form-text text-muted mb-4\">\r\n                    At least 8 characters and 1 digit\r\n                </small>\r\n                <input type=\"password\" id=\"confirmPassword\" className=\"form-control\" placeholder=\"Confirm Password\" aria-describedby=\"defaultRegisterFormPasswordHelpBlock\" value={this.state.confirmPassword} onChange={this.handleChange} ref=\"confirmPassword\"/>\r\n                <button className=\"btn btn-info my-4 btn-block btn-sm\" type=\"submit\" onClick = {this.handleSubmitForm}>Sign Up</button>\r\n            </div>\r\n        </form>\r\n           \r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default Signup;\r\n\r\n//creating className component rcc\r\n//for shortcut es7 extension we have to add.","var axios = require('axios')\r\nvar ES6Promise = require('es6-promise')\r\nES6Promise.polyfill()\r\nconst ApiService = {\r\n    get( apiurl) {\r\n      return axios.get(apiurl)\r\n      .then(response => {\r\n          return response.data\r\n        })\r\n        .catch(response => {\r\n            return response.data\r\n        })\r\n    },\r\n\r\n    post( apiurl,bodyFormData) {\r\n        console.log(\":in API\")\r\n        return axios.post(apiurl,bodyFormData)\r\n        .then(response => {\r\n          console.log(\"pankaj\")\r\n            return response\r\n          })\r\n        .catch(err => {\r\n          console.log(\"pankaj114554\")\r\n          console.log(err.response)\r\n          const res = {\r\n              message : err.response.data.message,\r\n              status : err.response.status\r\n          }\r\n          return res;\r\n        \r\n        })\r\n    },\r\n\r\n\r\n    put( apiurl,bodyFormData) {\r\n        return axios.put(apiurl,bodyFormData)\r\n        .then(response => {\r\n            return response\r\n          })\r\n        .catch(err => console.log(err))\r\n    },\r\n    delete( apiurl,bodyFormData) {\r\n        return axios.delete(apiurl)\r\n        .then(response => {\r\n            return response\r\n          })\r\n        .catch(err => console.log(err))\r\n    }\r\n}\r\n  export default ApiService\r\n\r\n\r\n\r\nexport const loginApi = {\r\n//   getUser() {\r\n//     return ApiService.get( 'http://localhost:5004/employee/' )\r\n//   },\r\n//   selectedUser(user) {\r\n//     return ApiService.get( 'http://localhost:5004/employee/'+user)\r\n//   },\r\n\r\n//   addUser(user) {\r\n//       console.log(user)\r\n//     return ApiService.post( 'http://localhost:5004/user/',user)\r\n//   },\r\n\r\n  loginCheck(user) {\r\n    console.log(user)\r\n  return ApiService.post( 'http://localhost:5004/user/checklogin',user)\r\n  }\r\n//   ,\r\n\r\n//   updateUser(user) {\r\n//     return ApiService.put( 'http://localhost:5004/employee/'+user['_id'],user)\r\n//   },\r\n\r\n//   deleteUser(user) {\r\n//     return ApiService.delete( 'http://localhost:5004/employee/'+user)\r\n//   }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { loginApi } from '../api/loginapi'\r\nimport  { alertmesage }  from './alertMessage';\r\n\r\nclass Login extends Component {\r\n\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            email: \"\",\r\n            password: \"\"\r\n        }\r\n        this.handleSubmitForm =  this.handleSubmitForm.bind(this);\r\n        this.handleChange =  this.handleChange.bind(this);\r\n\r\n    }\r\n\r\n    handleChange(event){\r\n        this.setState({\r\n            email: this.refs.email.value,\r\n            password: this.refs.password.value\r\n        })\r\n    }\r\n\r\n    async handleSubmitForm(event){\r\n        event.preventDefault();\r\n\r\n        \r\n        // this.setState({\r\n        //     email: \"\" ,\r\n        //     password: \"\" \r\n        // });\r\n        // this.props.history.push(\"/signup\");\r\n\r\n        if(this.state.email && this.state.password){\r\n            const res = await loginApi.loginCheck(this.state)\r\n \r\n            // //for redirecting home page\r\n            console.log(res);\r\n            if(res.status == 201){\r\n                console.log(res.data.email);\r\n                sessionStorage.setItem(\"email\", res.data.email);\r\n                this.setState({\r\n                    email: \"\" ,\r\n                    password: \"\" \r\n                });\r\n                console.log(sessionStorage.getItem(\"email\"))\r\n                this.props.history.push(\"/\");\r\n                alertmesage.createNotification(res.status,\"Logged in Successfully\")\r\n                \r\n            }else{\r\n                alertmesage.createNotification(res.status,res.message)\r\n            }\r\n\r\n        }else{\r\n            //Alert message\r\n            alertmesage.createNotification(400,\"Did you miss filling some field.\")\r\n        }\r\n\r\n     }\r\n\r\n    render() {\r\n        return (\r\n        <form className=\"text-center border border-light p-5\" onSubmit={this.handleSubmitForm}>\r\n            <div className = \"col-md-4 offset-md-4\">\r\n                <p className=\"h4 mb-4\">Log In</p>\r\n                <input type=\"email\" id=\"defaultRegisterFormEmail\" className=\"form-control mb-4\" onChange={this.handleChange} placeholder=\"E-mail\" ref=\"email\"/>\r\n                <input type=\"password\" id=\"defaultRegisterFormPassword\" className=\"form-control\" onChange={this.handleChange} placeholder=\"Password\" ref=\"password\" aria-describedby=\"defaultRegisterFormPasswordHelpBlock\"/>\r\n                <button className=\"btn btn-info my-4 btn-block btn-sm\" type=\"submit\" onClick={this.handleSubmitForm}>Sign In</button>\r\n            </div>\r\n        </form>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Login;\r\n\r\n\r\n//creating class component rcc\r\n//for shortcut es7 extension we have to add.","import React, { Component } from 'react'\r\nimport  { alertmesage }  from './alertMessage';\r\n\r\nexport class logout extends Component {\r\n\r\n\r\n    componentDidMount(){\r\n        console.log(\"componentDIDsMount\")\r\n        console.log(sessionStorage.getItem(\"email\"))\r\n        if(sessionStorage.getItem(\"email\")){\r\n            sessionStorage.clear()\r\n            this.props.history.push(\"/\");\r\n            alertmesage.createNotification(201,\"Logged out Successfully\")\r\n        }else{\r\n            this.props.history.push(\"/\");\r\n            alertmesage.createNotification(500,\"Please Login to Access\")\r\n        }\r\n\r\n      }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default logout\r\n","import React, { Component } from 'react';\nimport axios from 'axios'\nimport './App.css';\nimport { BrowserRouter as Router , Route , Switch } from 'react-router-dom'\n// import { userModule } from './api/api';\nimport EmployeeList from './components/employeeList'\nimport AddEmployee from './components/AddEmployee'\nimport {NotificationContainer} from 'react-notifications';\nimport Signup from './components/Signup';\nimport Login from './components/Login';\nimport logout from './components/logout';\n \n\n\n    class App extends Component {\n    render() {\n      return (\n        <div>\n          <Router >\n            <Switch>\n              <Route exact path=\"/\" component={EmployeeList}></Route>\n              <Route exact path=\"/addemployee\" component={AddEmployee}></Route>\n              <Route exact path=\"/signup\" component={Signup}></Route>\n              <Route exact path=\"/signin\" component={Login}></Route>\n              <Route exact path=\"/logout\" component={logout}></Route>\n            </Switch>\n            <NotificationContainer></NotificationContainer>\n          </Router>\n        </div>\n          );\n    }\n  }\n\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux';\nimport store from './store/index';\n\n\nReactDOM.render((\n    <Provider store={store}>\n    <App />\n    </Provider>)\n    , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}